[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    #before the original gcode
    BED_MESH_CLEAR
    #G28
    #the original gcode
    BASE_BED_MESH_CALIBRATE METHOD=rapid_scan
    #after the original gcode

[gcode_macro FINAL_DELAY]
gcode:
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000
    G4 P10000

[gcode_macro CALIBRATE_EDDY]
gcode:
    LDC_CALIBRATE_DRIVE_CURRENT CHIP=btt_eddy
    PROBE_EDDY_CURRENT_CALIBRATE_AUTO CHIP=btt_eddy
    PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy

[gcode_button z_offset_button]
pin: PC4 # The pin on which the button is connected. This parameter must be provided.
press_gcode:
  RESPOND TYPE=echo MSG='Z Offset'


[gcode_macro Z_BUTTON]
gcode:  
      G1 Z15 F1200             ; Aproxima o bico da mesa
      M400                     ; Aguarda a conclusão do movimento
      G1 X100 Y298 F6000       ; Move para a posição do botão (ajuste conforme necessário)
      M400                     ; Aguarda a conclusão do movimento


[gcode_macro SWITCH_TEST]
gcode:
  Z_BUTTON
  {% for step in range(100) %}
   QUERY_BUTTON BUTTON=z_offset_button
   G4 P50     
  _SWITCH_TEST_2
  {% endfor %}

[gcode_macro _SWITCH_TEST_2]
gcode:
  {% if printer["gcode_button z_offset_button"].state == 'PRESSED' %}
    RESPOND TYPE=echo MSG='Z Offset'
    SET_GCODE_OFFSET Z={5 - printer.toolhead.position.z}
  {% else %}
    RESPOND TYPE=echo MSG='Z not Offset'
    G1 Z{printer.toolhead.position.z - 0.05} F300
    M400
  {% endif %}